<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Licensed to the Apache Software Foundation (ASF) under one or more 
	~ contributor license agreements. See the NOTICE file distributed with ~ 
	this work for additional information regarding copyright ownership. ~ The 
	ASF licenses this file to You under the Apache License, Version 2.0 ~ (the 
	"License"); you may not use this file except in compliance with ~ the License. 
	You may obtain a copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 
	~ ~ Unless required by applicable law or agreed to in writing, software ~ 
	distributed under the License is distributed on an "AS IS" BASIS, ~ WITHOUT 
	WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. ~ See the 
	License for the specific language governing permissions and ~ limitations 
	under the License. -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.apache.spark</groupId>
		<artifactId>spark-parent</artifactId>
		<version>1.0.0-incubating-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<groupId>org.apache.spark</groupId>
	<artifactId>jobserver</artifactId>
	<packaging>jar</packaging>
	<name>Spark Project JobServer</name>
	<url>http://spark.incubator.apache.org/</url>

	<repositories>
		<repository>
			<id>apache-repo</id>
			<name>Apache Repository</name>
			<url>https://repository.apache.org/content/repositories/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spray-repo</id>
			<name>Spray Repository</name>
			<url>http://repo.spray.io/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<!-- "org.slf4j" % "log4j-over-slf4j" % "1.6.6", // akka-app uses logback, 
		so no log4j "com.typesafe" % "config" % "1.0.0", "org.joda" % "joda-convert" 
		% "1.2", "joda-time" % "joda-time" % "2.1", "com.yammer.metrics" % "metrics-core" 
		% "2.2.0", "io.spray" % "spray-json_2.9.2" % "1.2.3", "io.spray" % "spray-can" 
		% "1.3.0", "io.spray" % "spray-routing" % "1.3.0" -->

	<dependencies>
		<dependency>
			<groupId>${akka.group}</groupId>
			<artifactId>akka-remote_${scala.binary.version}</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_2.10</artifactId>
			<version>1.0.0-incubating-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-actors</artifactId>
			<version>2.10.3</version>
		</dependency>
		<dependency>
			<groupId>io.spray</groupId>
			<artifactId>spray-can</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>io.spray</groupId>
			<artifactId>spray-routing</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>1.6.6</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe</groupId>
			<artifactId>config</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.joda</groupId>
			<artifactId>joda-convert</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>com.yammer.metrics</groupId>
			<artifactId>metrics-core</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>io.spray</groupId>
			<artifactId>spray-json_2.10</artifactId>
			<version>1.2.3</version>
		</dependency>
		<!-- <dependency> <groupId>com.novocode</groupId> <artifactId>junit-interface</artifactId> 
			<scope>test</scope> </dependency> <dependency> <groupId>commons-io</groupId> 
			<artifactId>commons-io</artifactId> </dependency> -->
	</dependencies>
	<build>
		<outputDirectory>target/scala-${scala.binary.version}/classes</outputDirectory>
		<testOutputDirectory>target/scala-${scala.binary.version}/test-classes</testOutputDirectory>
		<plugins>
		  <!--
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
			</plugin>
			-->

			<!-- This plugin forces the generation of jar containing jobserver test 
				classes, so that the tests classes of external modules can use them. The 
				two execution profiles are necessary - first one for 'mvn package', second 
				one for 'mvn compile'. Ideally, 'mvn compile' should not compile test classes 
				and therefore should not need this. However, an open Maven bug (http://jira.codehaus.org/browse/MNG-3559) 
				causes the compilation to fail if streaming test-jar is not generated. Hence, 
				the second execution profile for 'mvn compile'. -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
          <execution>
            <id>test-jar-on-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
   <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-shade-plugin</artifactId>
     <version>2.2</version>
     <executions>
       <execution>
         <phase>package</phase>
         <goals>
           <goal>shade</goal>
         </goals>
           <configuration>
              <filters>
                <filter>
                   <artifact>*:*</artifact>
		   <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
                <filter>
                   <includes>
                       <include>**</include>
                   </includes>
                </filter>
              </filters>   
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>reference.conf</resource>
                </transformer>
              </transformers>         
            </configuration>
       </execution>
     </executions>
   </plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-jar-plugin
										</artifactId>
										<versionRange>[2.2,)</versionRange>
										<goals>
											<goal>test-jar</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
